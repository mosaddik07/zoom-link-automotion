import express from "express";
import dotenv from "dotenv";
import { Client, GatewayIntentBits } from "discord.js";
import fetch from "node-fetch";

// dotenv config
dotenv.config();

// Express server setup
const app = express();
const PORT = process.env.PORT || 3000;

// Discord bot setup
const { BOT_TOKEN, CLIENT_ID, CLIENT_SECRET, ACCOUNT_ID, CHANNEL_ID } =
  process.env;

const client = new Client({
  intents: GatewayIntentBits.Guilds,
});

// Discord bot login
client.once("ready", () => {
  console.log("Discord Bot is ready!");
});

// Zoom Access Token ржкрзЗрждрзЗ рж╕рж╣ржЬ ржХрзЛржб
export async function getZoomAccessToken() {
  const url = `https://zoom.us/oauth/token?grant_type=account_credentials&account_id=${ACCOUNT_ID}`;
  const auth = Buffer.from(`${CLIENT_ID}:${CLIENT_SECRET}`).toString("base64");

  try {
    const response = await fetch(url, {
      method: "POST",
      headers: {
        Authorization: `Basic ${auth}`,
        "Content-Type": "application/x-www-form-urlencoded",
      },
    });

    const data = await response.json();
    return data.access_token;
  } catch (error) {
    console.error("Error fetching Zoom Access Token:", error);
    return null;
  }
}

// Zoom Meeting рждрзИрж░рж┐ ржХрж░рж╛рж░ ржХрзЛржб
async function createZoomMeeting(startTime, duration = 40) {
  const accessToken = await getZoomAccessToken();

  if (!accessToken) return null;

  const meetingDetails = {
    topic: "Wix Squad",
    type: 2, // Scheduled Meeting
    start_time: startTime,
    duration,
    timezone: "UTC",
    password: "12345",
    settings: {
      host_video: true,
      participant_video: true,
      join_before_host: false,
    },
  };

  try {
    const response = await fetch("https://api.zoom.us/v2/users/me/meetings", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${accessToken}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify(meetingDetails),
    });

    const { join_url } = await response.json();
    return join_url;
  } catch (error) {
    console.error("Error creating Zoom meeting:", error);
    return null;
  }
}

// Discord ржЪрзНржпрж╛ржирзЗрж▓рзЗ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржирзЛрж░ ржлрж╛ржВрж╢ржи
async function sendToDiscord(message) {
  const channel = await client.channels.fetch(CHANNEL_ID);
  channel.send(message);
}

// ржкрзНрж░рждрж┐ рзйрзп ржорж┐ржирж┐ржЯ ржкрж░ Zoom рж▓рж┐ржЩрзНржХ ржкрж╛ржарж╛ржирзЛрж░ ржлрж╛ржВрж╢ржи
async function startZoomScheduler() {
  setInterval(async () => {
    const startTime = new Date();
    startTime.setMinutes(startTime.getMinutes() + 1); // ржкрж░ржмрж░рзНрждрзА ржорж┐ржЯрж┐ржВ рж╢рзБрж░рзБ рж╣ржмрзЗ рзз ржорж┐ржирж┐ржЯ ржкрж░

    const meetingLink = await createZoomMeeting(startTime.toISOString(), 40); // ржорж┐ржЯрж┐ржВ ржХрзНрж░рж┐рзЯрзЗржЯ рж╣ржмрзЗ рзкрзж ржорж┐ржирж┐ржЯрзЗрж░ ржЬржирзНржп

    if (meetingLink) {
      await sendToDiscord(
        `*****************************************
      ЁЯМЯ Wix Squad - Team Discussion ЁЯМЯ
      -----------------------------------------
      ЁЯЧУ Date: ${getCurrentDate()}
      тП░ Meeting Time End: ${getFutureTime()}
      ЁЯФЧ Zoom Link: ${meetingLink}
      -----------------------------------------
      ${getRandomQuote()}
      *****************************************`
      );
    }
  }, 5000); // рзйрзп ржорж┐ржирж┐ржЯ ржкрж░ржкрж░ ржПржЯрж╛ ржЪрж▓ржмрзЗ
}

// Bot login ржПржмржВ Zoom scheduler рж╕рзНржЯрж╛рж░рзНржЯ
client.login(BOT_TOKEN).then(() => {
  startZoomScheduler(); // scheduler рж╕рзНржЯрж╛рж░рзНржЯ ржХрж░рж╛
});

// Express server route
app.get("/", (req, res) => {
  res.send("Server is running! ЁЯЪА");
});

// Express server listen (Vercel or Lambda compatibility)
app.get("/api", (req, res) => {
  res.send("This is the API endpoint! ЁЯЪА");
});

// Vercel/AWS Lambda compatibility
export default (req, res) => {
  app(req, res); // Express app as a handler
};

// import pkg, { ClientVoiceManager, heading } from "discord.js";
// import fetch from "node-fetch";
// import dotenv from "dotenv";

// dotenv.config();

// const { Client, GatewayIntentBits } = pkg; // discord.js ржерзЗржХрзЗ Client ржПржмржВ Intents ржЗржоржкрзЛрж░рзНржЯ

// // Zoom Access Token ржкрзЗрждрзЗ рж╕рж╣ржЬ ржХрзЛржб
// export async function getZoomAccessToken() {
//   const CLIENT_ID = process.env.CLIENT_ID;
//   const CLIENT_SECRET = process.env.CLIENT_SECRET;
//   const ACCOUNT_ID = process.env.ACCOUNT_ID;

//   const url = `https://zoom.us/oauth/token?grant_type=account_credentials&account_id=${ACCOUNT_ID}`;
//   const auth = Buffer.from(`${CLIENT_ID}:${CLIENT_SECRET}`).toString("base64");

//   try {
//     const response = await fetch(url, {
//       method: "POST",
//       headers: {
//         Authorization: `Basic ${auth}`,
//         "Content-Type": "application/x-www-form-urlencoded",
//       },
//     });

//     const data = await response.json();
//     return data.access_token;
//   } catch (error) {
//     console.error("Error fetching Zoom Access Token:", error);
//     return null;
//   }
// }

// // Zoom Meeting рждрзИрж░рж┐ ржХрж░рж╛рж░ ржХрзЛржб
// async function createZoomMeeting(startTime, duration = 40) {
//   const accessToken = await getZoomAccessToken();

//   if (!accessToken) return null;

//   const meetingDetails = {
//     topic: "Wix Squad",
//     type: 2, // Scheduled Meeting
//     start_time: startTime,
//     duration,
//     timezone: "UTC",
//     password: "12345",
//     settings: {
//       host_video: true,
//       participant_video: true,
//       join_before_host: false,
//     },
//   };

//   try {
//     const response = await fetch("https://api.zoom.us/v2/users/me/meetings", {
//       method: "POST",
//       headers: {
//         Authorization: `Bearer ${accessToken}`,
//         "Content-Type": "application/json",
//       },
//       body: JSON.stringify(meetingDetails),
//     });

//     const { join_url } = await response.json();
//     console.log("join_url: ", join_url);
//     return join_url;
//   } catch (error) {
//     console.error("Error creating Zoom meeting:", error);
//     return null;
//   }
// }

// const client = new Client({
//   intents: GatewayIntentBits.Guilds, // Intents рж╕ржарж┐ржХржнрж╛ржмрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
// });

// client.once("ready", () => {
//   console.log("Bot is ready!");
// });

// // Discord ржЪрзНржпрж╛ржирзЗрж▓рзЗ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржирзЛрж░ ржлрж╛ржВрж╢ржи
// async function sendToDiscord(message) {
//   const channel = await client.channels.fetch(process.env.CHANNEL_ID);
//   channel.send(message);
// }

// // ржкрзНрж░рждрж┐ рзйрзп ржорж┐ржирж┐ржЯ ржкрж░ Zoom рж▓рж┐ржЩрзНржХ ржкрж╛ржарж╛ржирзЛрж░ ржлрж╛ржВрж╢ржи
// async function startZoomScheduler() {
//   setInterval(async () => {
//     const startTime = new Date();
//     startTime.setMinutes(startTime.getMinutes() + 1); // ржкрж░ржмрж░рзНрждрзА ржорж┐ржЯрж┐ржВ рж╢рзБрж░рзБ рж╣ржмрзЗ рзз ржорж┐ржирж┐ржЯ ржкрж░

//     const meetingLink = await createZoomMeeting(startTime.toISOString(), 40); // ржорж┐ржЯрж┐ржВ ржХрзНрж░рж┐рзЯрзЗржЯ рж╣ржмрзЗ рзкрзж ржорж┐ржирж┐ржЯрзЗрж░ ржЬржирзНржп

//     if (meetingLink) {
//       await sendToDiscord(
//         `*****************************************
//       ЁЯМЯ Wix Squad - Team Discussion ЁЯМЯ
//       -----------------------------------------
//       ЁЯЧУ Date: ${getCurrentDate()}
//       тП░ Meeting Time End: ${getFutureTime()}
//       ЁЯФЧ Zoom Link: ${meetingLink}
//       -----------------------------------------
//       ${getRandomQuote()}
//       *****************************************`
//       );
//     }
//   }, 5000); // рзйрзп ржорж┐ржирж┐ржЯ ржкрж░ржкрж░ ржПржЯрж╛ ржЪрж▓ржмрзЗ // 39 * 60 * 1000
// }

// // Bot login ржПржмржВ Zoom scheduler рж╕рзНржЯрж╛рж░рзНржЯ
// client.login(process.env.BOT_TOKEN).then(() => {
//   startZoomScheduler(); // scheduler рж╕рзНржЯрж╛рж░рзНржЯ ржХрж░рж╛
// });

// function getCurrentDate() {
//   const options = {
//     hour: "2-digit",
//     minute: "2-digit",
//     hour12: true,
//     day: "2-digit",
//     month: "2-digit",
//     year: "numeric",
//   };
//   const currentDate = new Date().toLocaleString("en-US", options);

//   const [time, date] = currentDate.split(", ");
//   const formattedDate = `${time} - ${date}`;

//   return formattedDate;
// }

// function getFutureTime() {
//   const currentDate = new Date();
//   currentDate.setMinutes(currentDate.getMinutes() + 39);

//   const options = {
//     hour: "2-digit",
//     minute: "2-digit",
//     hour12: true,
//     day: "2-digit",
//     month: "2-digit",
//     year: "numeric",
//   };

//   const futureDate = currentDate.toLocaleString("en-US", options);
//   const [time, date] = futureDate.split(", ");
//   const formattedDate = `${time} - ${date}`;
//   return formattedDate;
// }

// function getRandomQuote() {
//   const quotes = [
//     "рж╕рзНржмржкрзНржи ржжрзЗржЦрждрзЗ рж╣ржмрзЗ, рждржмрзЗ рж╕рзЗржЯрж╛ ржмрж╛рж╕рзНрждржмрзЗ рж░рзВржк ржжрзЗржУрзЯрж╛рж░ ржЬржирзНржп ржХржарзЛрж░ ржкрж░рж┐рж╢рзНрж░ржо ржХрж░рждрзЗ рж╣ржмрзЗред ЁЯМЯ",
//     "ржЬрзАржмржи рж╣рж▓рзЛ ржПржХржЯрж┐ ржмржЗ, ржХрж┐ржирзНрждрзБ ржХрзЗржЙ ржпржжрж┐ рждрж╛ ржкрзЬрждрзЗ ржирж╛ ржЪрж╛рзЯ, рждржмрзЗ ржХрж┐ржЫрзБржЗ ржЕрж░рзНржЬрж┐ржд рж╣ржмрзЗ ржирж╛ред ЁЯУЪ",
//     "ржкрзНрж░рждрж┐ржжрж┐ржи ржПржХржЯрзБ ржПржХржЯрзБ ржХрж░рзЗ ржирж┐ржЬрзЗржХрзЗ ржЙржирзНржиржд ржХрж░рзБржиред ЁЯТк",
//     "ржЬрзАржмржи ржХржЦржирзЛ ржХржЦржирзЛ ржХржарж┐ржи рж╣рждрзЗ ржкрж╛рж░рзЗ, ржХрж┐ржирзНрждрзБ ржЖржкржирж╛рж░ рж╕рж╛рж╣рж╕рзА ржоржирзЛржнрж╛ржмржЗ ржЖржкржирж╛ржХрзЗ ржПржЧрж┐рзЯрзЗ ржирзЗржмрзЗред ЁЯЪА",
//     "ржХрж╖рзНржЯ ржЫрж╛рзЬрж╛ ржХрж┐ржЫрзБржЗ ржкрж╛ржУржпрж╝рж╛ ржпрж╛рзЯ ржирж╛ред ЁЯПЛя╕ПтАНтЩВя╕П",
//     "ржЖржкржирж╛рж░ рж╕рзЗрж░рж╛ ржмржирзНржзрзБрж░ ржоржд ржХрж┐ржЫрзБржЗ рж╣рждрзЗ ржкрж╛рж░рзЗ ржирж╛, ржХрж╛рж░ржг ржПржХрж╕рж╛ржерзЗ ржерж╛ржХрж▓рзЗржЗ ржЬрзАржмржи рж╕рзБржирзНржжрж░ рж╣рзЯред ЁЯМИ",
//     "ржзрзИрж░рзНржпржЗ рж╣рж▓рзЛ рж╕ржлрж▓рждрж╛рж░ ржЪрж╛ржмрж┐ред ЁЯФС",
//     "рж╕рж╛ржлрж▓рзНржп ржкржерзЗ ржпржд ржмрж╛ржзрж╛ржЗ ржЖрж╕рзБржХ, рж╕рж╛ржоржирзЗ ржПржЧрж┐рзЯрзЗ ржЪрж▓рж╛ ржЙржЪрж┐рждред ЁЯСг",
//     "ржЖржкржирж┐ ржпржжрж┐ ржоржирзЗ ржХрж░рзЗржи ржЖржкржирж┐ ржкрж╛рж░рзЗржи, рждржмрзЗ ржЖржкржирж┐ рж╕ржарж┐ржХ ржкржерзЗ ржЖржЫрзЗржиред ЁЯТп",
//     "ржпрждржмрж╛рж░ ржЖржкржирж┐ ржкрзЬржмрзЗржи ржирж╛, рждрждржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред тЬи",
//     "рж╕рждрзНржпрж┐ржХрж╛рж░рзЗрж░ ржХрзНрж╖ржорждрж╛ рждржЦржиржЗ ржЖрж╕рзЗ, ржпржЦржи ржЖржкржирж┐ ржЕржирзНржпржжрзЗрж░ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗржиред ЁЯдЭ",
//     "ржпрзЗ ржХрж╛ржЬржЯрж┐ ржЖржкржирж┐ рж╕ржарж┐ржХржнрж╛ржмрзЗ ржХрж░рждрзЗ ржЪрж╛ржи, рж╕рзЗржЯрж┐ ржХрж░рж╛рж░ ржЖржЧрзЗ ржкрзНрж░рж╕рзНрждрзБрждрж┐ ржирж┐ржиред ЁЯФе",
//     "рж╕ржмрж╛ржЗ ржорж┐рж▓рзЗ ржпржжрж┐ ржХрж╛ржЬ ржХрж░рзЗ, рждржмрзЗржЗ ржХрж┐ржЫрзБ ржШржЯрж╛рждрзЗ ржкрж╛рж░ржмрзЗржиред ЁЯМЯ",
//     "ржкрзНрж░ржержо ржкржжржХрзНрж╖рзЗржк ржирж┐ржи, ржмрж╛ржХрж┐ рж╕ржм ржЖрж╕ржмрзЗред ЁЯПГтАНтЩВя╕П",
//     "ржЪрж┐ржирзНрждрж╛ ржХрж░рждрзЗ ржерж╛ржХрзБржи, рж╕рзНржмржкрзНржи ржжрзЗржЦрждрзЗ ржерж╛ржХрзБржиред ЁЯМЩ",
//     "ржЕржирзНржпржжрзЗрж░ ржорждрзЛ рж╣рждрзЗ ржирзЯ, ржирж┐ржЬрзЗрж░ ржорждрзЛ ржерж╛ржХрждрзЗ рж╣ржмрзЗред ЁЯТе",
//     "ржПржоржи ржХрж┐ржЫрзБ ржХрж░рзБржи ржпрж╛ ржЕржирзНржпрж░рж╛ ржХрж░рждрзЗ рж╕рж╛рж╣рж╕ ржкрж╛рзЯ ржирж╛ред ЁЯПЕ",
//     "ржзрзИрж░рзНржп ржзрж░рзЗ ржХрж╛ржЬ ржХрж░рзБржи, рж╕ржлрж▓рждрж╛ ржирж┐рж╢рзНржЪрж┐рждред ЁЯТ╝",
//     "рж╕ржлрж▓рждрж╛ ржжрзЗрж░рж┐рждрзЗ ржЖрж╕рзЗ, ржХрж┐ржирзНрждрзБ ржПржХржжрж┐ржи ржЖрж╕рзЗред тП│",
//     "ржмрзЬ ржХрж┐ржЫрзБ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ, ржкрзНрж░ржержорзЗ ржЫрзЛржЯ ржЫрзЛржЯ ржЙржжрзНржпрзЛржЧ ржирж┐ржиред ЁЯЫая╕П",
//     "ржмрж┐рж╢рзНржмрж╛рж╕ржЗ рж╣рж▓рзЛ ржЖрждрзНржоржмрж┐рж╢рзНржмрж╛рж╕рзЗрж░ ржорзВрж▓ ржЪрж╛ржмрж┐ржХрж╛ржарж┐ред ЁЯФР",
//     "ржЖржкржирж┐ ржпрзЗржЯрж┐ ржХрж░рждрзЗ ржЪрж╛ржи, рж╕рзЗржЯрж┐ ржпржжрж┐ ржЖржкржирж╛рж░ ржХрж╛ржЫрзЗ ржЬрж░рзБрж░рж┐ ржоржирзЗ рж╣рзЯ, рждржмрзЗ рж╕ржлрж▓рждрж╛ ржЖржкржирж╛рж░ рж╣рж╛рждрзЗрж░ ржорзБржарзЛрзЯред ЁЯСК",
//     "ржЕржЬрзЗрзЯ рж╣рждрзЗ рж╣рж▓рзЗ, ржЕржЬрзЗрзЯ рж╣ржУрзЯрж╛рж░ ржкржерзЗ ржЪрж▓рждрзЗ рж╣ржмрзЗред ЁЯЫдя╕П",
//     "ржжрзБрж░рзНржмрж▓рждрж╛ ржХржЦржирзЛ рж╕ржлрж▓рждрж╛ рж╣рждрзЗ ржкрж╛рж░рзЗ ржирж╛, рж╢ржХрзНрждрж┐ ржЖрж░ ржоржирзЛржмрж▓ржЗ рж╕ржлрж▓рждрж╛рж░ ржорзВрж▓ред ЁЯТк",
//     "ржХржарзЛрж░ ржкрж░рж┐рж╢рзНрж░ржо ржХржЦржирзЛ ржмрж┐ржлрж▓рзЗ ржпрж╛рзЯ ржирж╛ред ЁЯПЛя╕ПтАНтЩВя╕П",
//     "ржЕржмрж╕рзНржерж╛рж░ ржкрж░рж┐ржмрж░рзНрждржи ржЖржкржирж╛рж░ рж╕рж┐ржжрзНржзрж╛ржирзНрждрзЗрж░ ржЙржкрж░ ржирж┐рж░рзНржнрж░ ржХрж░рзЗред тЪб",
//     "рж╕рждрзНржпрж┐ржХрж╛рж░ ржкрж░рж┐ржмрж░рзНрждржи рж╕рзЗржЗ рж╕ржорзЯ ржЖрж╕рзЗ ржпржЦржи ржЖржкржирж┐ ржЕржирзНржпржжрзЗрж░ ржЬржирзНржп ржХрж┐ржЫрзБ ржХрж░рзЗржиред ЁЯМН",
//     "рж╣рж╛рж▓ ржЫрж╛рзЬржмрзЗржи ржирж╛, ржЬрзАржмржи ржПржХржжрж┐ржи ржЖржкржирж╛рж░ ржкржХрзНрж╖рзЗ ржЪрж▓рзЗ ржЖрж╕ржмрзЗред тП│",
//     "ржпржд рждрж╛рзЬрж╛рждрж╛рзЬрж┐ ржЖржкржирж┐ ржкржержЯрж╛ рж╢рзБрж░рзБ ржХрж░ржмрзЗржи, рждржд рждрж╛рзЬрж╛рждрж╛рзЬрж┐ ржЖржкржирж┐ рж╕ржлрж▓рждрж╛ ржЕрж░рзНржЬржи ржХрж░ржмрзЗржиред ЁЯЫгя╕П",
//     "ржПржоржи ржХрж┐ржЫрзБ ржХрж░рж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи ржпрж╛ ржЖржкржирж╛рж░ ржЬрзАржмржирзЗ ржкрж░рж┐ржмрж░рзНрждржи ржЖржиржмрзЗред ЁЯФД",
//     "ржмрж┐рж╢рзНржмрж╛рж╕ рж░рж╛ржЦрзБржи, рж╕рж╛ржлрж▓рзНржп ржЖрж╕ржмрзЗред ЁЯМЯ",
//     "ржЖржкржирж╛рж░ рж╢ржЦржЯрж╛ржЗ ржЖржкржирж╛рж░ рж╕рж╛ржлрж▓рзНржпрзЗрж░ ржкржерзЗ ржкрзНрж░ржзрж╛ржи ржкржжржХрзНрж╖рзЗржк рж╣рждрзЗ ржкрж╛рж░рзЗред ЁЯОи",
//     "ржЪрзЗрж╖рзНржЯрж╛ ржЕржмрзНржпрж╛рж╣ржд рж░рж╛ржЦрж▓рзЗ ржПржХржжрж┐ржи рж╕ржлрж▓рждрж╛ ржЖрж╕ржмрзЗржЗред ЁЯЪА",
//     "ржЖржкржирж┐ ржпржд ржмрзЗрж╢рж┐ ржкрж╛рж░рзЗржи, рждржд ржмрзЗрж╢рж┐ ржЖржкржирж╛рж░ ржорзЗржзрж╛ ржкрзНрж░ржорж╛ржг рж╣ржмрзЗред ЁЯза",
//     "ржЖржкржирж╛рж░ ржкрж░рж┐рж╢рзНрж░ржоржЗ ржЖржкржирж╛рж░ рж╕рж╛ржлрж▓рзНржпрзЗрж░ ржорзВрж▓ред ЁЯФе",
//     "ржПржХржЯрж┐ ржЫрзЛржЯ рж╕ржарж┐ржХ ржкржжржХрзНрж╖рзЗржк ржЬрзАржмржирзЗрж░ ржкрж░рж┐ржмрж░рзНрждржи ржЖржирждрзЗ ржкрж╛рж░рзЗред ЁЯСг",
//     "ржпржд ржмрзЗрж╢рж┐ ржХржарж┐ржи рж╣ржмрзЗ, рждржд ржмрзЬ рж╣ржмрзЗ ржЖржкржирж╛рж░ рж╕ржлрж▓рждрж╛ред ЁЯПЖ",
//     "ржирж┐ржЬрзЗржХрзЗ ржмрж┐рж╢рзНржмрж╛рж╕ ржХрж░рзБржи ржПржмржВ ржирждрзБржи ржХрж┐ржЫрзБ ржХрж░рж╛рж░ рж╕рж╛рж╣рж╕ рж░рж╛ржЦрзБржиред ЁЯТк",
//     "рж╕ржорзЯрзЗрж░ ржЧрзБрж░рзБрждрзНржм ржмрзБржЭрзБржи, ржЬрзАржмржи ржЕржирзЗржХ ржорзВрж▓рзНржпржмрж╛ржиред тП│",
//     "ржЖржкржирж╛рж░ ржХрж╛ржЬрзЗрж░ ржкрзНрж░рждрж┐ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржПржХржжрж┐ржи ржкрзБрж░рж╕рзНржХрзГржд рж╣ржмрзЗред ЁЯТЦ",
//     "ржПржХржЯрж┐ ржнрж╛рж▓рзЛ ржжрж┐ржирзЗрж░ рж╢рзБрж░рзБ рж╣рзЯ ржПржХржЯрж┐рж░ рж╕рж┐ржжрзНржзрж╛ржирзНржд ржерзЗржХрзЗред ЁЯЧУя╕П",
//     "ржмрж┐ржЬрзЯрзА рж╣рждрзЗ рж╣рж▓рзЗ ржмрж╛рж░ржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рждрзЗ рж╣ржмрзЗред ЁЯФБ",
//     "ржнржмрж┐рж╖рзНржпржд рждрзИрж░рж┐ ржХрж░рж╛рж░ рж╕ржмржЪрзЗрзЯрзЗ ржнрж╛рж▓рзЛ ржЙржкрж╛рзЯ рж╣рж▓, рж╕рзЗржЯрж╛ ржЖржЬ рж╢рзБрж░рзБ ржХрж░рж╛ред ЁЯФо",
//     "ржирж┐рж░рзНржзрж╛рж░ржгржЗ рж╕рж╛ржлрж▓рзНржпрзЗрж░ ржорзВрж▓ред ЁЯПЕ",
//     "ржмрж┐рж╢рзНржмрж╛рж╕ рж░рж╛ржЦрзБржи, ржирждрзБржи рж╕рзБржпрзЛржЧ ржЖрж╕ржмрзЗред ЁЯФУ",
//     "ржПржЯрж╛ ржЖржкржирж╛рж░ рж╕ржорзЯ, ржПржЯрж╛ ржЖржкржирж╛рж░ рж╕рзБржпрзЛржЧред тП░",
//     "ржпрждржмрж╛рж░ ржЖржкржирж┐ ржкрзЬржмрзЗржи ржирж╛, рждрждржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред тЬи",
//     "ржЕржзрж┐ржХ ржХрж╛ржЬ ржХрж░рж▓рзЗ, ржЕржзрж┐ржХ рж╕рж╛ржлрж▓рзНржп ржЖрж╕рзЗред ЁЯФе",
//     "ржзрзИрж░рзНржп рж╕рж╣ржХрж╛рж░рзЗ ржЖржкржирж┐ ржПржХржжрж┐ржи ржЖржкржирж╛рж░ рж▓ржХрзНрж╖рзНржп ржЕрж░рзНржЬржи ржХрж░ржмрзЗржиред ЁЯТл",
//     "ржкрж░рж┐рж╢рзНрж░ржо ржХржЦржирзЛ ржмрзГржерж╛ ржпрж╛рзЯ ржирж╛ред ЁЯПЛя╕ПтАНтЩАя╕П",
//     "рж╕ржлрж▓ рж╣рждрзЗ рж╣рж▓рзЗ, ржХржарж┐ржи ржкрж░рж┐рж╢рзНрж░ржорзЗрж░ ржмрж┐ржХрж▓рзНржк ржирзЗржЗред ЁЯТе",
//     "ржПржЯрж╛ржЗ ржЖржкржирж╛рж░ рж╕рзЗрж░рж╛ рж╕ржорзЯ, ржПрж░ ржерзЗржХрзЗ ржнрж╛рж▓рзЛ рж╕ржорзЯ ржЖрж░ ржХржЦржирзЛ ржЖрж╕ржмрзЗ ржирж╛ред тП│",
//     "ржирж┐ржЬрзЗрж░ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржЖрж░ ржкрж░рж┐рж╢рзНрж░ржо ржжрж┐рзЯрзЗ ржЖржкржирж┐ ржЕржирзЗржХ ржХрж┐ржЫрзБ ржЕрж░рзНржЬржи ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред ЁЯТЦ",
//     "ржпржд ржмрзЗрж╢рж┐ рж╢рж┐ржЦржмрзЗржи, рждржд ржмрзЗрж╢рж┐ рж╕ржлрж▓ рж╣ржмрзЗржиред ЁЯУЪ",
//     "ржХрж╖рзНржЯ рж╣ржЪрзНржЫрзЗ рждрзЛ, рждржмрзЗ ржЬрж╛ржиржмрзЗржи рж╕ржлрж▓рждрж╛рж░ ржкржерзЗ ржПржЧрж┐рзЯрзЗ ржпрж╛ржЪрзНржЫрзЗржиред ЁЯЪА",
//     "ржЖржкржирж╛рж░ рж╕рзНржмржкрзНржи ржмрж╛рж╕рзНрждржмрж╛рзЯрж┐ржд ржХрж░рж╛рж░ ржЬржирзНржп ржЫрзЛржЯ ржкржжржХрзНрж╖рзЗржк ржирж┐рждрзЗ рж╣ржмрзЗред ЁЯж╢",
//     "рждрж┐ржиржЯрж┐ ржЬрж┐ржирж┐рж╕ ржЖржкржирж╛рж░ ржХрж╛ржЫрзЗ ржерж╛ржХрж╛ ржЙржЪрж┐ржд: ржЖрждрзНржоржмрж┐рж╢рзНржмрж╛рж╕, рж╕ржВржХрж▓рзНржк, ржПржмржВ рж╕ржорзЯред ЁЯХ░я╕П",
//     "ржЖржкржирж╛рж░ рж╕рзАржорж╛ржмржжрзНржзрждрж╛ ржЖржкржирж╛рж░ рж╕рж╛ржлрж▓рзНржпржХрзЗ рж░рзБржЦрзЗ ржжрж┐рждрзЗ ржкрж╛рж░рзЗ ржирж╛ред ЁЯЪз",
//     "ржкрзНрж░рждрж┐ржжрж┐ржи ржХрж┐ржЫрзБ ржнрж╛рж▓рзЛ ржХрж╛ржЬ ржХрж░рзБржи, ржлрж▓рж╛ржлрж▓ ржПржХржжрж┐ржи ржЖрж╕ржмрзЗржЗред ЁЯМ▒",
//     "рж╕рзНржмржкрзНржирзЗрж░ ржжрж┐ржХрзЗ ржПржЧрж┐рзЯрзЗ ржпрж╛ржи, ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬ ржЖрж╕ржмрзЗржЗ ржХрж┐ржирзНрждрзБ ржЖржкржирж┐ ржЬрзЯрзА рж╣ржмрзЗржиред ЁЯПЕ",
//     "рж╕рждрзНржпрж┐ржЗ рж╕ржлрж▓ рж╣ржУрзЯрж╛, рж╢рзБржзрзБ рж╕рзГрж╖рзНржЯрж┐ржХрж░рзНрждрж╛рж░ ржЗржЪрзНржЫрж╛рзЯ ржирж┐рж░рзНржнрж░рж╢рзАрж▓ред ржмрж┐рж╢рзНржмрж╛рж╕ рж░рж╛ржЦрзБржи ржПржмржВ ржЪрзЗрж╖рзНржЯрж╛ ржЪрж╛рж▓рж┐рзЯрзЗ ржпрж╛ржиред тЬи",
//     "ржЖрж▓рзНрж▓рж╛рж╣ ржЙржкрж░ ржмрж┐рж╢рзНржмрж╛рж╕ рж░рж╛ржЦрзБржи, рж╕ржмржХрж┐ржЫрзБржЗ рждрж╛ржБрж░ ржЗржЪрзНржЫрж╛рзЯ ржШржЯрзЗред ЁЯХКя╕П",
//     "ржпржЦржи ржЖржкржирж┐ ржЖрж▓рзНрж▓рж╛рж╣рж░ ржкржерзЗ ржЪрж▓ржмрзЗржи, рждржЦржи рж╕ржмржХрж┐ржЫрзБржЗ рж╕рж╣ржЬ рж╣рзЯрзЗ ржпрж╛ржмрзЗред ЁЯХМ",
//     "ржЖрж▓рзНрж▓рж╛рж╣ рж╕ржмржХрж┐ржЫрзБрж░ рж╕рзЗрж░рж╛ ржкрж░рж┐ржХрж▓рзНржкржирж╛ ржХрж░рзЗржи, ржЖрж░ ржЖржорж░рж╛ рждрж╛рж░ ржкржерзЗ ржЪрж▓рждрзЗ ржкрж╛рж░рж┐ред ЁЯМЩ",
//     "ржпржЦржиржЗ ржХрж┐ржЫрзБ рж╣рж╛рж░рж╛ржмрзЗржи, ржмрзБржЭржмрзЗржи ржЖрж▓рзНрж▓рж╛рж╣ ржЖржкржирж╛ржХрзЗ ржХрж┐ржЫрзБ ржнрж╛рж▓рзЛ ржжрж┐рждрзЗ ржпрж╛ржЪрзНржЫрзЗржиред ЁЯТЦ",
//     "ржЖрж▓рзНрж▓рж╛рж╣рж░ рж╕рж╛рж╣рж╛ржпрзНржп ржЫрж╛рзЬрж╛ ржХрзЛржи ржХрж┐ржЫрзБржЗ рж╕ржорзНржнржм ржирзЯред рж╕ржм ржХрж┐ржЫрзБ рждрж╛рж░ ржирж┐рзЯржирзНрждрзНрж░ржгрзЗред ЁЯЩП",
//     "ржмрж┐рж╢рзНржмрж╛рж╕ рж░рж╛ржЦрзБржи, ржЖрж▓рзНрж▓рж╛рж╣ рж╕ржм рж╕ржорзЯ ржЖржкржирж╛рж░ ржкрж╛рж╢рзЗ ржЖржЫрзЗржиред ЁЯТл",
//     "ржЖрж▓рзНрж▓рж╛рж╣рж░ рж░рж╛рж╕рзНрждрж╛рзЯ ржЪрж▓рж▓рзЗ, ржПржХржжрж┐ржи ржЖржкржирж┐ ржЖржкржирж╛рж░ рж╕рж╛ржлрж▓рзНржп ржжрзЗржЦрждрзЗ ржкрж╛ржмрзЗржиред ЁЯМЯ",
//   ];

//   const randomIndex = Math.floor(Math.random() * quotes.length);
//   return quotes[randomIndex];
// }
